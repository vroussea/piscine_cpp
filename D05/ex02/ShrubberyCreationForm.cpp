/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrubberyCreationForm.cpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: vroussea <vroussea@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/01/15 20:07:43 by vroussea          #+#    #+#             */
/*   Updated: 2018/01/15 20:07:43 by vroussea         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ShrubberyCreationForm.hpp"

/* ******************************* */
/*    Constructors & destructor    */
/* ******************************* */

ShrubberyCreationForm::ShrubberyCreationForm(std::string target) : Form("ShrubberyCreationForm", 145, 137, target) {

}

ShrubberyCreationForm::~ShrubberyCreationForm(void) {

}

/* ******************************* */
/*       operators  overload       */
/* ******************************* */

ShrubberyCreationForm &ShrubberyCreationForm::operator=(ShrubberyCreationForm const &) {
    return *this;
}

std::ostream &operator<<(std::ostream &o, ShrubberyCreationForm const &i) {
    o << i.getName();
    o << ", required grade for signing : " << i.getSignGrade();
    o << ", required grade for execution : " << i.getExecGrade();
    o << ". It is a Shrubbery Creation Form with " << i.getTarget();
    o << " as a target." << std::endl;

    return o;
}

/* ******************************* */
/*            Functions            */
/* ******************************* */

void        ShrubberyCreationForm::execute(Bureaucrat const &executor) const {
    if (!_signed)
        throw FormNotSignedException();
    if (executor.getGrade() <= _execGrade) {
        std::string filename = concatStrings(_target, "_shrubbery");

        std::ofstream file;
        try {
            file.open(filename);
        }
        catch (std::exception &e) {
            throw CannotOpenFileException();
        }
        file << "            .        +          .      .          .                 .        +          .      .          .                 .        +          .      .          .                 .        +          .      .          .     \n"
                "     .            _        .                    .            .            _        .                    .            .            _        .                    .            .            _        .                    .       \n"
                "  ,              /;-._,-.____        ,-----.__            ,              /;-._,-.____        ,-----.__            ,              /;-._,-.____        ,-----.__            ,              /;-._,-.____        ,-----.__          \n"
                "           .    (_:#::_.:::. `-._   /:, /-._, `._,                 .    (_:#::_.:::. `-._   /:, /-._, `._,                 .    (_:#::_.:::. `-._   /:, /-._, `._,                 .    (_:#::_.:::. `-._   /:, /-._, `._,      \n"
                "  `                 \\   _|`\"=:_::.`.);  \\ __/ /           `                 \\   _|`\"=:_::.`.);  \\ __/ /           `                 \\   _|`\"=:_::.`.);  \\ __/ /           `                 \\   _|`\"=:_::.`.);  \\ __/ /         \n"
                "                      ,    `./  \\:. `.   )==-'  .                             ,    `./  \\:. `.   )==-'  .                             ,    `./  \\:. `.   )==-'  .                             ,    `./  \\:. `.   )==-'  .       \n"
                "    .      ., ,-=-.  ,\\, +#./`   \\:.  / /           .       .      ., ,-=-.  ,\\, +#./`   \\:.  / /           .       .      ., ,-=-.  ,\\, +#./`   \\:.  / /           .       .      ., ,-=-.  ,\\, +#./`   \\:.  / /           .   \n"
                ".           \\/:/`-' , ,\\ '` ` `   ): , /_  -o           .           \\/:/`-' , ,\\ '` ` `   ): , /_  -o           .           \\/:/`-' , ,\\ '` ` `   ): , /_  -o           .           \\/:/`-' , ,\\ '` ` `   ): , /_  -o           \n"
                "       .    /:+- - + +- : :- + + -:'  /(o-) \\)     .           .    /:+- - + +- : :- + + -:'  /(o-) \\)     .           .    /:+- - + +- : :- + + -:'  /(o-) \\)     .           .    /:+- - + +- : :- + + -:'  /(o-) \\)     .    \n"
                "  .      ,=':  \\    ` `/` ' , , ,:' `'--\".--\"---._/`7     .      ,=':  \\    ` `/` ' , , ,:' `'--\".--\"---._/`7     .      ,=':  \\    ` `/` ' , , ,:' `'--\".--\"---._/`7     .      ,=':  \\    ` `/` ' , , ,:' `'--\".--\"---._/`7   \n"
                "   `.   (    \\: \\,-._` ` + '\\, ,\"   _,--._,---\":.__/       `.   (    \\: \\,-._` ` + '\\, ,\"   _,--._,---\":.__/       `.   (    \\: \\,-._` ` + '\\, ,\"   _,--._,---\":.__/       `.   (    \\: \\,-._` ` + '\\, ,\"   _,--._,---\":.__/    \n"
                "              \\:  `  X` _| _,\\/'   .-'                                \\:  `  X` _| _,\\/'   .-'                                \\:  `  X` _| _,\\/'   .-'                                \\:  `  X` _| _,\\/'   .-'                  \n"
                ".               \":._:`\\____  /:'  /      .           .  .               \":._:`\\____  /:'  /      .           .  .               \":._:`\\____  /:'  /      .           .  .               \":._:`\\____  /:'  /      .           .  \n"
                "                    \\::.  :\\/:'  /              +                           \\::.  :\\/:'  /              +                           \\::.  :\\/:'  /              +                           \\::.  :\\/:'  /              +       \n"
                "   .                 `.:.  /:'  }      .                   .                 `.:.  /:'  }      .                   .                 `.:.  /:'  }      .                   .                 `.:.  /:'  }      .                \n"
                "           .           ):_(:;   \\           .                      .           ):_(:;   \\           .                      .           ):_(:;   \\           .                      .           ):_(:;   \\           .           \n"
                "                      /:. _/ ,  |                                             /:. _/ ,  |                                             /:. _/ ,  |                                             /:. _/ ,  |                       \n"
                "                   . (|::.     ,`                  .                       . (|::.     ,`                  .                       . (|::.     ,`                  .                       . (|::.     ,`                  .    \n"
                "     .                |::.    {\\                             .                |::.    {\\                             .                |::.    {\\                             .                |::.    {\\                        \n"
                "                      |::.\\  \\ `.                                             |::.\\  \\ `.                                             |::.\\  \\ `.                                             |::.\\  \\ `.                       \n"
                "                      |:::(\\    |                                             |:::(\\    |                                             |:::(\\    |                                             |:::(\\    |                       \n"
                "              O       |:::/{ }  |                  (o                 O       |:::/{ }  |                  (o                 O       |:::/{ }  |                  (o                 O       |:::/{ }  |                  (o   \n"
                "               )  ___/#\\::`/ (O \"==._____   O, (O  /`                  )  ___/#\\::`/ (O \"==._____   O, (O  /`                  )  ___/#\\::`/ (O \"==._____   O, (O  /`                  )  ___/#\\::`/ (O \"==._____   O, (O  /`   \n"
                "          ~~~w/w~\"~~,\\` `:/,-(~`\"~~~~~~~~\"~o~\\~/~w|/~             ~~~w/w~\"~~,\\` `:/,-(~`\"~~~~~~~~\"~o~\\~/~w|/~             ~~~w/w~\"~~,\\` `:/,-(~`\"~~~~~~~~\"~o~\\~/~w|/~             ~~~w/w~\"~~,\\` `:/,-(~`\"~~~~~~~~\"~o~\\~/~w|/~   \n"
                "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\\\W~~~~~~~~~~~~\\|/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\\\W~~~~~~~~~~~~\\|/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\\\W~~~~~~~~~~~~\\|/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\\\W~~~~~~~~~~~~\\|/~~~~~~~~~~" << std::endl;
        file.close();
    }
    else {
        throw Form::GradeTooLowException();
    }
}

std::string const    ShrubberyCreationForm::concatStrings(std::string const str1, std::string const str2) const {
    std::ostringstream ss;

    ss << str1 << str2;

    return ss.str();
}

/* ******************************* */
/*            Accessors            */
/* ******************************* */



/* ******************************* */
/*            Exceptions           */
/* ******************************* */

const char  *ShrubberyCreationForm::CannotOpenFileException::what() const throw() {
    return "cannot open file";
}